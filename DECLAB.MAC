.INCLUDE /DECDFN/
.MODULE DECLAB,RELEASE=V09,VERSION=09,COMMENT=<ВСТАВКА МЕТОК В ТЕКСТ>

............................................................
;
; INSLAB - ВЫВОД МЕТОК
;	ВХОДНАЯ СТРОКА - В CURLIN
;	ЗАПИСЬ КОДА В .MAC ИЗ CURLIN
;
............................................................
INSLAB::
	JSR	R1,$SAVE5	; СОХРАНИТЬ РЕГИСТРЫ 1-5

	MOV	R2,LINEND	; КОНЕЦ СТРОКИ
	MOV	CURLC,R5
	MOV	R5,LABLC

	MOV	CURPS,R4
	ASL	R4

OUTLAB: MOV	#CURLIN+8.,R0	; СОХРАНИТЬ ЧАСТЬ СТРОКИ
	MOV	(R0)+,-(SP)
	MOV	(R0)+,-(SP)
	MOV	(R0)+,-(SP)
;
; ВЫВОД ГЛОБАЛЬНЫХ МЕТОК
;
GLBPUT:
1$:	MOV	R5,R3		; LABLC
	MOV	#GLBPN1,R0	; АДРЕС ТАБЛИЦЫ
	CALL	LABSRH		; ИСКАТЬ
	BCS	2$		; НЕ НАШЛИ
	CALL	CBLKB		; ПРОВЕРИТЬ НА .BLKB
	CALL	PUTNAM		; ВЫВЕСТИ ИМЯ
	MOVB	#':,(R2)+
	MOVB	#':,(R2)+
	CMPB	CURLIN+8.,#'.	; ВЫВОДИТЬ ИМЯ ОТДЕЛЬНО?
	BEQ	1$		; НЕТ
	CALL	CLNPUT
	BR	1$
2$:	TST	BLKB1
	BNE	TXTPUT		; НЕ ВЫВОДИТЬ .+NNN

3$:	MOV	NXTLC,R3
	DEC	R3
	MOV	#GLBPN1,R0	; АДРЕС ТАБЛИЦЫ
	CALL	LABSRH		; ИСКАТЬ
	BCS	TXTPUT		; НЕ НАШЛИ
	CALL	PUTNAM		; ВЫВЕСТИ ИМЯ
	MOVB	#'=,(R2)+	; ВЫВОДИТЬ X==.+N
	CALL	PUTEQU		;
	BR	3$		; МОГУТ БЫТЬ СОВП. ГЛОБ. СИМВОЛЫ
;
; ВЫВОД ТЕКСТОВЫХ МЕТОК
;
TXTPUT:
1$:	MOV	R5,R3		; LABLC
	MOV	#TXTPN1,R0	; АДРЕС ТАБЛИЦЫ
	CALL	LABSRH		; ИСКАТЬ
	BCS	2$		; НЕ НАШЛИ
	CALL	CBLKB		; ПРОВЕРИТЬ НА .BLKB
	CALL	PUTNAM		; ВЫВЕСТИ ИМЯ
	MOVB	#':,(R2)+
	BR	1$
2$:	TST	BLKB1
	BNE	LSPUT		; НЕ ВЫВОДИТЬ .+NNN

3$:	MOV	NXTLC,R3
	DEC	R3
	MOV	#TXTPN1,R0	; АДРЕС ТАБЛИЦЫ
	CALL	LABSRH		; ИСКАТЬ
	BCS	LSPUT		; НЕ НАШЛИ
	CALL	PUTNAM		; ВЫВЕСТИ ИМЯ
	CALL	PUTEQU		;
	BR	3$		; МОГУТ БЫТЬ СОВП. СИМВОЛЫ
;
; ВЫВОД ЛОКАЛЬНЫХ СИМВОЛОВ  (  CXXXXX:)
;
LSPUT:
	MOV	R5,R3
	MOV	#LSPN1,R0	; АДРЕС ТАБЛИЦЫ
	CALL	LABSRH		; ИСКАТЬ
	BCS	2$		; НЕ НАШЛИ
	CALL	CBLKB
	CALL	CLNPUT		; ДОВЫВЕСТИ ПРЕД. МЕТКУ
	MOV	CURPS,R0
	MOV	#CURLIN,R2
	CALL	OUTLS		; ЗАСЛАТЬ В БУФЕР МЕТКУ
	MOVB	#':,(R2)+
2$:	TST	BLKB1
	BNE	LLPUT

3$:	MOV	NXTLC,R3
	DEC	R3
	MOV	#LSPN1,R0	; АДРЕС ТАБЛИЦЫ
	CALL	LABSRH		; ИСКАТЬ
	BCS	LLPUT		; НЕ НАШЛИ
	CALL	CLNPUT		; ДОВЫВЕСТИ ПРЕД. МЕТКУ
	MOV	CURPS,R0
	MOV	#CURLIN,R2
	CALL	OUTLS		; ВЫВЕСТИ МЕТКУ
	CALL	PUTEQU		; ВЫВЕСТИ X=.+N
	BR	3$
;
; ВЫВОД ЛОКАЛЬНЫХ МЕТОК (LL, XXX$:)
;
LLPUT:
	MOV	R5,R3		; LABLC
	MOV	#LLPN1,R0	; АДРЕС ТАБЛИЦЫ
	CALL	LABSRH		; ИСКАТЬ
	BCS	2$		; НЕ НАШЛИ - КОНЕЦ
	CALL	CBLKB
	CALL	CLNPUT
	MOV	CURPS,R0
	MOV	#CURLIN,R2
	CALL	OUTLL
	MOVB	#':,(R2)+
2$:	TST	BLKB1
	BNE	RESTOR
;
; ВНИМАНИЕ ! ВЫРАЖЕНИЕ XXX$=.+N НЕДОПУСТИМО ДЛЯ АССЕМБЛЕРА
;    НЕОБХОДИМЫ ИСПРАВЛЕНИЯ В ПОЛУЧЕННОМ .MAC - ФАЙЛЕ
;
3$:	MOV	NXTLC,R3
	DEC	R3
	MOV	#LLPN1,R0	; АДРЕС ТАБЛИЦЫ
	CALL	LABSRH		; ИСКАТЬ
	BCS	RESTOR
	CALL	CLNPUT
	MOV	CURPS,R0
	MOV	#CURLIN,R2
	CALL	OUTLL		; ВЫВЕСТИ L.L.
	CALL	PUTEQU
	BR	3$

RESTOR:
	MOV	#CURLIN+14.,R0
	MOV	(SP)+,-(R0)
	MOV	(SP)+,-(R0)
	MOV	(SP)+,-(R0)

	MOV	BLKB1,BLKB
	BEQ	COMMENT 	; .BLKB НЕ ОБНАРУЖЕНО
	MOV	NXTLC,R0
	SUB	LABLC,R0
	CALL	SETBLK
	MOV	NXTLC,R1
	MOV	GLBPN1(R4),R0
	BEQ	1$
	MOV	2(R0),R1
1$:	MOV	TXTPN1(R4),R0
	BEQ	21$
	CMP	2(R0),R1
	BHIS	21$
	MOV	2(R0),R1
21$:	MOV	LSPN1(R4),R0
	BEQ	2$
	CMP	2(R0),R1
	BHIS	2$
	MOV	2(R0),R1
2$:	MOV	LLPN1(R4),R0
	BEQ	3$
	CMP	2(R0),R1
	BHIS	3$
	MOV	2(R0),R1
3$:	CMP	R1,NXTLC
	BLO	4$
	BR	COMMENT
4$:	MOV	R1,R5		; УСТАНОВИТЬ LABLC
	JMP	OUTLAB		; ПРОДОЛЖИТЬ ОБРАБОТКУ

COMMENT:
	CALL	OUTCOM
OUTPUT:
	CLR	BLKB1
	CLR	BLKB
	MOV	LINEND,R2
	CALL	WR$LIN		; ВЫВЕСТИ В ВЫХОДНОЙ ФАЙЛ
	RETURN
............................................................
;
; ВЫВОД КОММЕНТАРИЯ
;
............................................................
OUTCOM:
	MOV	NXTLC,I.LEN
	SUB	LABLC,I.LEN
	TST	COMSWT
	BEQ	7$

	MOV	LINEND,R2
	MOV	R2,R4
	MOV	#LC.COL,R0
	CALL	ROUND
	MOVB	#';,(R2)+
	BIT	#C.LC!C.LCN,COMSWT
	BEQ	2$
	CALL	COMLC
2$:	TST	BLKB1
	BNE	6$
	CMP	CURLIN+8.,#".=
	BEQ	6$
	CMP	CURLIN+8.,#".A
	BEQ	6$
	CMP	I.LEN,#6
	BHI	6$
3$:	BIT	#C.WRD,COMSWT
	BEQ	4$
	CALL	COMWRD
4$:	BIT	#C.ASC,COMSWT
	BEQ	5$
	CALL	COMASC
5$:	BIT	#C.RAD,COMSWT
	BEQ	6$
	CALL	COMRAD
6$:	MOV	R4,LINEND
7$:	RETURN 

ROUND:
	MOV	R1,-(SP)
	MOV	R3,-(SP)
	MOV	R2,R1
	SUB	#CURLIN,R1	; ТЕКУЩАЯ ПОЗИЦИЯ

3$:	MOV	R0,R3
	SUB	R1,R3		; ОСТАЛОСЬ
	BLT	1$
	MOV	R1,-(SP)
	BIC	#^C7,@SP
	SUB	#10,@SP
	NEG	@SP
	CMP	R3,(SP)+	; МЕНЬШЕ,ЧЕМ НА ТАБ.
	BLT	1$
2$:	MOVB	#200,(R2)+
	INC	R1
	BIT	#7,R1
	BNE	2$
	MOVB	#11,-1(R2)
	BR	3$

1$:	MOVB	#40,(R2)+
	INC	R1
	CMP	R1,R0
	BLT	1$
	MOV	(SP)+,R3
	MOV	(SP)+,R1
	RETURN
;
; ВЫВОД LC
;
COMLC:
	MOV	LABLC,R0
	CMP	#C.LCN,COMSWT	; ВЫВОДИТЬ LCN?		;; FOR DEBUG
	BNE	1$		; НЕТ
	MOV	CMDLCN,R0	; ВЫВЕСТИ LCN
1$:	CALL	FOCONV
	CALL	MOVTXT
	MOV	R2,R4
	RETURN
COMWRD:
	MOV	I.LEN,R1
	ASR	R1
	BNE	3$
	MOVB	#' ,(R2)+
	MOVB	LINBYT,R0
	BIC	#^C377,R0
	CALL	FOCONV
	ADD	#3,R0		; УБРАТЬ ПЕРВЫЕ 3 СИМВОЛА
	CALL	MOVTXT
	MOVB	LINREL,(R2)+
	MOV	R2,R4
	RETURN

3$:	MOV	#LINBYT,L.B.PNT
	MOV	#LINREL,L.R.PNT
6$:	MOVB	#' ,(R2)+
	MOV	@L.B.PNT,R0
	CALL	FOCONV
	CALL	MOVTXT
	MOVB	@L.R.PNT,(R2)+
	ADD	#2,L.B.PNT
	INC	L.R.PNT
	DEC	R1
	BNE	6$
	MOV	R2,R4
	RETURN

COMASC:
	MOV	#ASC.COL,R0
	CALL	ROUND
	MOV	I.LEN,R1
	CLR	R3
	MOVB	#'",(R2)+
	MOV	#LINBYT,R5
	CLR	-(SP)
	MOV	#LINREL-1,L.R.PNT

4$:	MOV	#2,(SP)
	INC	L.R.PNT
	CMPB	@L.R.PNT,#40
	BEQ	2$
	ADD	#2,R5
	SUB	#2,R1
	BLE	5$
	BR	4$

2$:	MOVB	(R5)+,R0
	CMPB	R0,#40
	BLT	1$
	CMPB	R0,#176
	BGT	1$
	MOVB	R0,(R2)+
	INC	R3
1$:	DEC	R1
	BEQ	5$
	DEC	(SP)
	BNE	2$
	BR	4$

5$:	TST	(SP)+
	MOVB	#'",(R2)+
	TST	R3
	BNE	3$
	MOV	R4,R2
3$:	MOV	R2,R4
	RETURN

COMRAD:
	MOV	#RAD.COL,R0
	CALL	ROUND
	MOV	R2,R0
	MOV	I.LEN,R1
	ASR	R1
	BEQ	10$
	CLR	R2
	MOVB	#'/,(R0)+
	MOV	#LINBYT,R5
	MOV	#LINREL,L.R.PNT
2$:	MOV	(R5)+,R3
	BEQ	1$
	CMP	R3,#175000	; ДОП. ЗНАЧ. R50?
	BHIS	1$		; НЕТ
	CMPB	@L.R.PNT,#40	; МОДИФИЦИРОВАНО?
	BNE	1$		; ДА
	CALL	R50AS1		; ПРЕОБР. В ASCII
	INC	R2		; УВЕЛ. СЧЕТЧИК ПРЕОБР. СЛОВ
1$:	INC	L.R.PNT
	DEC	R1
	BNE	2$
	MOVB	#'/,(R0)+
	TST	R2		; ЧТО-НИБУТЬ ПРЕОБР.?
	BNE	3$		; ДА
10$:	MOV	R4,R0
3$:	MOV	R0,R2
	MOV	R2,R4
	RETURN
;
;
; CBLKB - ВЫВОД .BLKB ДО МЕТКИ
;	R5 - ТЕКУЩЕЕ LC
;
CBLKB:
	TST	BLKB		; ОБРАБАТЫВАТЬ .BLKB
	BEQ	99$		; НЕТ - ВОЗВРАТ
	JSR	R1,$SAV4	; СОХРАНИТЬ РЕГИСТРЫ
	MOV	R5,R0
	SUB	LABLC,R0	; ВЫЧИСЛИТЬ КОЛ-ВО БАЙТОВ ПЕРЕД МЕТКОЙ
	CALL	SETBLK
	MOV	R5,-(SP)
	CALL	OUTCOM
	MOV	(SP)+,R5
	MOV	LINEND,R2
	CALL	WR$LIN		; ВЫВЕСТИ СТРОКУ

	CALL	BEGLIN		; СТЕРЕТЬ МЕТКУ
	MOV	R5,LABLC	; ПРОДВИНУТЬ LABLC
	CLR	BLKB		; СБРОСИТЬ ФЛАГ ОБРАБОТКИ
99$:	RETURN
;
; SETBLK - УСТАНОВКА ДЛИНЫ .BLKW
;
SETBLK:
	MOVB	#'B,CURLIN+12.
	BIT	#1,LABLC
	BNE	1$
	BIT	#1,R0
	BNE	1$
	ASR	R0
	MOVB	#'W,CURLIN+12.
1$:	CALL	OCONV
	MOV	#CURLIN+16.,R2
	CALL	MOVTXT		; ВЫВЕСТИ В СТРОКУ MACRO
	MOV	R2,LINEND	; УСТАНОВИТЬ КОНЕЦ СТРОКИ
	RETURN
;
; ВЫВОД ИМЕНИ ГЛОБАЛЬНОГО СИМВОЛА
;
PUTNAM:
	CALL	CLNPUT		; ДОВЫВЕСТИ ПРЕД.
	MOV	#CURLIN,R0
	CALL	R50ASC
	MOV	R0,R2
	CALLR	DELSP
;
; П/П ПОИСКА МЕТОК И СИМВОЛОВ (ОБЩАЯ)
;
; НА ВХОДЕ: R0 - АДРЕС ТАБЛИЦЫ
;	    R3 - LC ДЛЯ ПОИСКА
;	    R4 - CURPS*2
;
; НА ВЫХОДЕ: SEC - НЕ НАЙДЕНА
;	     CLC - НАЙДЕНА
;
; R1 - ИСПОЛЬЗУЕТСЯ (ИМЯ ДЛЯ .GLOBL)
;
LABSRH:
	ADD	R4,R0		; ВЫЧИСЛИТЬ УКАЗАТЕЛЬ НА СПИСОК
1$:	MOV	@R0,R1		; ВОЗЬМЕМ ЭЛЕМЕНТ
	BEQ	9$		; НИЧЕГО НЕТ
	CMP	2(R1),R3	; СОВП. LC?
	BHI	9$		; НЕТ
	MOV	@R1,@R0		; ДА,ОБНОВИТЬ УКАЗАТЕЛЬ
	CMP	2(R1),CURLC	;+++SUPER
	BLO	1$
	TST	(R1)+		; LINK
	MOV	(R1)+,R3	; УСТАНОВИТЬ НА ИМЯ (ДЛЯ .GLOBL)
	TST	(PC)+
9$:	SEC			; ОШИБКА - НЕ НАШЛИ
	RETURN
;
; П/П ВЫВОДА МЕТКИ
; ВЫВОДИТ МЕТКУ , ЕСЛИ ОНА ЗАПИСАНА, И СТИРАЕТ ЕЕ
;
CLNPUT:
	CMPB	#200,CURLIN		; ЕСТЬ МЕТКА
	BEQ	RET			; НЕТ - ВОЗВРАТ
	CALL	WR$LIN
	CALL	BEGLIN			; СТЕРЕТЬ МЕТКУ
RET:	RETURN
;
; ВЫВЕСТИ =.+N
;
PUTEQU: MOVB	#'=,(R2)+
	MOVB	#'.,(R2)+
	MOVB	#'+,(R2)+
	MOV	R3,R0		; LABEL LC
	SUB	R5,R0		; LABLC
	BPL	1$
	NEG	R0
	MOVB	#'-,-1(R2)
1$:	CALL	OCONV
	CALL	MOVTXT
	CALL	WR$LIN
	CALLR	BEGLIN

	.END
.............................
SMODE::
	CMPB	C$NUM(R5),#1
	BNE	1$
	MOV	C$PARM(R5)