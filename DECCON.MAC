.INCLUDE /DECDFN/
.MODULE DECCON,RELEASE=V09,VERSION=07,COMMENT=<ПРЕОБРАЗОВАНИЯ>
.REM	\

DECOBJ - ПРЕОБРАЗОВАНИЕ В ASCII , СОХРАНЕНИЕ РЕГИСТРОВ

	OCONV	ДВОИЧНО - ВОСМЕРИЧНОЕ ПРЕОБРАЗОВАНИЕ (С УСЕЧЕНИЕМ)
	FOCONV	ДВОИЧНО - ВОСМЕРИЧНОЕ ПРЕОБРАЗОВАНИЕ ( ФИКСИРОВ. )
	FDCONV	ДВОИЧНО - ДЕСЯТИЧНОЕ ПРЕОБРАЗОВАНИЕ ( ФИКСИРОВ. )
	DCONV	ДВОИЧНО - ДЕСЯТИЧНОЕ ПРЕОБРАЗОВАНИЕ (С УСЕЧЕНИЕМ)
	R50ASC	ПРЕОБРАЗОВАНИЕ RAD50 В ASCII
	ASCR50	ПРЕОБРАЗОВАНИЕ ASCII В RAD50
	MOVTXT	ПЕРЕСЫЛКА БАЙТОВ С ОКОНЧАНИЕМ ПО 0
	DELSP	УСЕЧЕНИЕ КОНЦ. ПРОБЕЛОВ
	$SAV2-	СОХРАНЕНИЕ 1,2 РЕГ.
	$SAV5	СОХРАНЕНИЕ РЕГ. 1-5
	TAB8	ВСТАВИТЬ 8 ПРОБЕЛОВ В ВЫХОДНУЮ СТРОКУ
\
;
; OCONV : ДВОИЧНО - ДЕСЯТИЧНОЕ ПРЕОБРАЗОВАНИЕ
; INPUT:  ЗНАЧЕНИЕ В R0
; OUTPUT: СТРОКА В CVTBUF , В R0 - АДРЕС CVTBUF ,СТРОКА ЗАКАНЧ. 0
; ВСЕ РЕГ. СОХР.
;
OCONV::
	JSR	R1,$SAVE2
	MOV	#CVTBUF+6,R1
	CLRB	@R1
1$:	MOV	R0,R2
	BIC	#^C7,R2
	ADD	#'0,R2
	MOVB	R2,-(R1)
	CLC
	ROR	R0
	ASR	R0
	ASR	R0
	BNE	1$
	MOV	R1,R0
	RETURN
;
; FOCONV - ДВОИЧНОЕ - ДЕСЯТИЧНОЕ ПРЕОБРАЗОВАНИЕ ( БЕЗ УСЕЧЕНИЯ )
; INPUT:  ЗНАЧЕНИЕ В R0
; OUTPUT: СТРОКА В CVTBUF , В R0 - #CVTBUF , СТРОКА ЗАКАНЧ. 0
; ВСЕ РЕГ. СОХР.
;
FOCONV::
	MOV	R1,-(SP)
	MOV	#CVTBUF,R1
	MOVB	#30,@R1
	SEC
1$:	ROL	R0
	ROLB	(R1)+
	MOVB	#206,@R1
2$:	ASL	R0
	BEQ	3$
	ROLB	@R1
	BCS	2$
	BR	1$
3$:	CLRB	@R1
	MOV	#CVTBUF,R0
	MOV	(SP)+,R1
	RETURN
;
; FDCONV - ДВОИЧНО - ДЕСЯТИЧНОЕ ПРЕОБРАЗОВАНИЕ ( ФИКСИРОВ.)
; INPUT : ПРЕОБР. СЛОВО - В R0
; OUTPUT : СТОРОКА В CVTBUF (ОКОНЧ. - 0)
;	   В R0 - #CVTBUF
;
FDCONV::
	JSR	R1,$SAVE2
	MOV	#CVTBUF,R1
	MOV	#DTABL,R2
2$:	MOVB	#'0-1,@R1
1$:	INCB	@R1
	SUB	@R2,R0
	BCC	1$
	ADD	(R2)+,R0
	INC	R1
	TST	@R2
	BNE	2$
	CLRB	@R1
	MOV	#CVTBUF,R0
	RETURN
DTABL:	.WORD	10000.,1000.,100.,10.,1.,0
;
; DCONV - ДВОИЧНО - ДЕСЯТИЧНОЕ ПРЕОБРАЗОВАНИЕ ( С УСЕЧЕНИЕМ)
; INPUT : ПРЕОБР. СЛОВО - В R0
; OUTPUT : СТОРОКА В CVTBUF (ОКОНЧ. - 0)
;	   В R0 - УКАЗАТЕЛЬ НА НАЧАЛО БУФЕРА (В CVTBUF)
;
DCONV::
	JSR	R1,$SAVE2
	MOV	#CVTBUF+5,R1
	CLRB	@R1
2$:	MOV	#-1,R2
1$:	INC	R2
	SUB	#10.,R0
	BCC	1$
	ADD	#'0+10.,R0
	MOVB	R0,-(R1)
	MOV	R2,R0
	BNE	2$
	MOV	R1,R0
	RETURN
;
; BCONV : ПРЕОБРАЗОВАНИЕ В ДВОИЧНУЮ ASCII - ФОРМУ
; INPUT:  ЗНАЧЕНИЕ В R0
; OUTPUT: СТРОКА В CVTBUF , В R0 - АДРЕС CVTBUF ,СТРОКА ЗАКАНЧ. 0
; ВСЕ РЕГ. СОХР.
;
BCONV::
	JSR	R1,$SAVE2
	MOV	#CVTBUF+16.,R1
	CLRB	@R1
1$:	MOV	#'0,R2
	ROR	R0
	ADC	R2
	MOVB	R2,-(R1)
	TST	R0
	BNE	1$
	MOV	R1,R0
	RETURN
;
; R3 - ПРЕОБР. СЛОВО RAD50
; R0 - ВЫХ. БУФФЕР
;
R50AS1::
	JSR	R1,$SAVE5
	BR	C5TA
;
; R50ASC - ПРЕОБР. ДВУХ СЛОВ RAD50 В ASCII
; НА ВХОДЕ: R0 -> ВЫХОДНОЙ БУФЕР (ASCII)
;	    R1 -> ВХОДНОЙ БУФЕР (RAD50)
;
R50ASC::
	JSR	R1,$SAVE5
	CALL	@PC
; R0-OUTPUT
; R1-INPUT
	CLR	R3		; ВЗЯТЬ ОЧЕРЕДНОЕ СЛОВО В RAD50
	BISB	(R1)+,R3
	SWAB	R3
	BISB	(R1)+,R3
	SWAB	R3
C5TA:	MOV	#TABL,R4
1$:	CLR	R5
2$:	INC	R5
	SUB	@R4,R3
	BCC	2$
	ADD	@R4,R3
	MOVB	ASCTBL-1(R5),(R0)+ ; ЗАСЛАТЬ СИМВОЛ В ВЫХОДНОЙ МАССИВ
	TST	-(R4)
	BNE	1$
	RETURN
	.WORD	0
	.WORD	1
	.WORD	50
TABL:	.WORD	3100
ASCTBL:	.ASCII	/ ABCDEFGHIJKLMNOPQRSTUVWXYZ$.?0123456789/
	
.IF	DF,$CODE
;
; ПРЕОБРАЗОВАНИЕ ЗАКОДИРОВАННОГО СООБЩЕНИЯ В ПСЕВДО-RAD50 В ASCII
; ВХОД:R0-ЗАКОДИРОВАННОЕ СЛОВО В RAD50
; ВЫХОД: (R2) - ВЫХОДНАЯ СТРОКА
; 
R50MSG::
	MOV	#TABL,R3
2$:	CLR	R1
1$:	INC	R1
	SUB	@R3,R0
	BCC	1$
	ADD	@R3,R0
.CHRTAB==.+2
	MOVB	^C<CHRTAB-$CONST-1>(R1),R1
	COM	R1
	ADD	#$CONST,R1
	MOVB	R1,(R2)+
	TST	-(R3)
	BNE	2$
	RETURN
.ENDC
;
; ASCR50 - ПРЕОБРАЗОВАНИЕ ИЗ ASCII В RAD50
;
; R0 - ВХОДНОЙ БУФЕР
; R50NAM - ВЫХОДНОЙ БУФЕР
;
ASCR50::
	JSR	R1,$SAVE4
	CLR	R50NAM+2
	MOV	#6,R4		; CNT
	CALL	CAT5
	MOV	R1,R50NAM
	TST	R4
	BLE	1$
	CALL	CAT5
	MOV	R1,R50NAM+2
1$:	RETURN

; R0-INPUT
; R4-ICNT
; R1-OUTPUT WORD

CAT5:	MOV	#2,-(SP)
	CLR	R1
2$:	CLR	R3
	DEC	R4
	BMI	6$
	MOV	#C00001,R2
	BISB	(R0)+,R3	; ОЧЕРДН. БАЙТ - В R3
3$:	CMPB	(R2)+,R3
	BLO	4$
	CMPB	(R2)+,R3
	BLO	5$
	DEC	R2
4$:	ADD	#3,R2
	TST	(R2)
	BNE	3$
	NEG	R4
	CLR	R3
	DEC	R0
5$:	ADD	(R2),R3
6$:	ASL	R1
	ASL	R1
	ASL	R1
	ADD	R1,R3
	ASL	R1
	ASL	R1
	ADD	R3,R1
	DEC	(SP)
	BPL	2$
	TST	(SP)+
	RETURN	
C00001:	.WORD	40132		; "Z@"
	.WORD	177700
	.WORD	27471		; "9/"
	.WORD	-22
;	.WORD	17440		; " "
;	.WORD	-40
	.WORD	21444		; "$#"
	.WORD	-11
	.WORD	26456		; ".-"
	.WORD	-22
	.WORD	0
.IF	DF,$CODE
;
; ДЕКОДИРОВАНИЕ СООБЩЕНИЯ, И ЗАСЫЛКА ЕГО В IDENT
;
$DECMS::
	JSR	R1,$SAVE5
	MOV	R0,-(SP)
1$:	COM	.CHRTAB
	ADD	#$CONST,.CHRTAB
	MOV	#<BR+<<2$-1$-1>/2>>,1$
2$:	MOV	#10,@.$FLADR
; ДЕКОДИРОВАНИЕ ИДЕНТИФИКАЦИИ
	MOV	#CODMSG,R5
	MOV	#CURLIN,R2
	ADD	#<IDENT-CURLIN>,R2
	MOV	#MSGLEN,R4
3$:	MOV	(R5)+,R0
	CALL	R50MSG
	DEC	R4
	BNE	3$
	CLRB	(R2)+
	MOV	(SP)+,R0
	RETURN
.ENDC
;
; УСТАНОВИТЬ ПОЗИЦИЮ В CURLIN НА ПЕРВУЮ ТАБ.
;
BEGLIN::
	MOV	#CURLIN,R2
	MOV	#<200*400+200>,(R2)
	MOV	(R2)+,(R2)
	MOV	(R2)+,(R2)+
	MOV	(PC)+,(R2)+
	.BYTE	200,11
	RETURN
;
; ПЕРЕСЛАТЬ СТРОКУ, ЗАКАНЧ. 0 ИЗ (R0) В (R1)
;
MOVTXT::
	MOVB	(R0)+,(R2)+
	BNE	MOVTXT
	DEC	R2
	RETURN
;
; УДАЛЕНИЕ КОНЦЕВЫХ ПРОБЕЛОВ
;
DELSP::
	CMPB	-(R2),#40
	BEQ	DELSP
	INC	R2
	RETURN
;
; СОХРАНЕНИЕ РЕГИСТРОВ (R0 - НЕ СОХРАНЯЕТСЯ!)
; ВЫЗОВ : JSR	R1,$SAVEX

.ENABL	LSB
$SAVE2::
$SAV2::
	MOV	R2,-(SP)
	MOV	R1,-(SP)
	MOV	4(SP),R1
	CALL	@(SP)+
	BR	3$
$SAVE3::
$SAV3::
	MOV	R2,-(SP)
	MOV	R3,-(SP)
	MOV	R1,-(SP)
	MOV	6(SP),R1
	CALL	@(SP)+
	BR	2$
$SAVE4::
$SAV4::
	MOV	R2,-(SP)
	MOV	R3,-(SP)
	MOV	R4,-(SP)
	MOV	R1,-(SP)
	MOV	10(SP),R1
	CALL	@(SP)+
	BR	1$
$SAVE5::
$SAV5::
	MOV	R2,-(SP)
	MOV	R3,-(SP)
	MOV	R4,-(SP)
	MOV	R5,-(SP)
	MOV	R1,-(SP)
	MOV	12(SP),R1
	CALL	@(SP)+
	MOV	(SP)+,R5
1$:	MOV	(SP)+,R4
2$:	MOV	(SP)+,R3
3$:	MOV	(SP)+,R2
	MOV	(SP)+,R1
	RETURN
.DSABL	LSB

.ENABL	LSB
.DD2CT::
	JSR	R1,$SAVE5
	MOV	#10.,R1
	BR	1$
.OD2CT::
	JSR	R1,$SAVE5
	MOV	#8.,R1
1$:	CLR	-(SP)
	CMPB	(R5),#'+
	BEQ	2$
	CMPB	(R5),#'-
	BNE	3$
	INC	(SP)
2$:	INC	R5
	DEC	R4
3$:	MOV	R5,R2
	ADD	R4,R2
	CMPB	-(R2),#'.
	BNE	4$
	MOV	#10.,R1
	BR	5$
4$:	CMPB	(R5),#'#
	BNE	6$
	MOV	#8.,R1
	INC	R5
5$:	DEC	R4
6$:	CLR	(R3)+
	CLR	(R3)
7$:	MOVB	(R5)+,R2
	SUB	#'0,R2
	BCS	11$
	CMP	R2,R1
	BCC	11$
	ASL	(R3)
	ROL	-(R3)
	MOV	(R3)+,-(SP)
	MOV	(R3),-(SP)
	ASL	(R3)
	ROL	-(R3)
	ASL	2(R3)
	ROL	(R3)+
	CMP	R1,#10.
	BEQ	8$
	CMP	(SP)+,(SP)+
	BR	9$
8$:	ADD	(SP)+,(R3)
	ADC	-(R3)
	ADD	(SP)+,(R3)+
9$:	ADD	R2,(R3)
	ADC	-2(R3)
	DEC	R4
	BNE	7$
	TST	(SP)+
	BEQ	10$
	NEG	-(R3)
	NEG	2(R3)
	SBC	(R3)
	CCC
10$:	RETURN
11$:	TST	(SP)+
	SEC
	RETURN

.DSABL	LSB
..D2CT::
	CLR	-(SP)
	MOV	R3,-(SP)
	MOV	SP,R3
	CMPB	#2,(R3)
	BEQ	1$
	CALL	.DD2CT
	BR	2$
1$:	CALL	.OD2CT
2$:	ROL	R3
	MOV	(SP)+,R5
	MOV	(SP)+,R4
	RETURN

	.END
