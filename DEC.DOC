.COM .TOC
.STL DECOBJ
.SWT 15

	 Д Е К О Д Е Р	О Б ' Е К Т Н Ы Х  М О Д У Л Е Й
----------------------------------------------------------------------

		      ВЕРСИЯ: V06.04
		       BDM, 23-JAN-87

.CPT ВВЕДЕНИЕ
.LIN 1
	DECOBJ - ЭТО СЕРВИСНАЯ ПРОГРАММА, ПРЕДНАЗНАЧЕННАЯ ДЛЯ ПРЕОБРАЗОВАНИЯ
ОБ'ЕКТНОГО КОДА PDP-11 СТАНДАРТА ФИРМЫ DEC В ЭКВИВАЛЕНТ НА MACRO-11,
КОММЕНТИРОВАННЫЙ ВОСМЕРИЧНЫМ, ASCII И RADIX 50 ЭКВИВАЛЕНТОМ.
ПОЛУЧЕННЫЙ АССЕМБЛЕРНЫЙ МОДУЛЬ ЗАТЕМ МОЖНО МОДИФИЦИРОВАТЬ ПРИ ПОМОЩИ ЛЮБОГО
ТЕКСТОВОГО РЕДАКТОРА И ПУТЕМ АССЕМБЛИРОВАНИЯ ПОЛУЧИТЬ ИСПРАВЛЕННЫЙ
ОБ'ЕКТНЫЙ МОДУЛЬ.
.LIN
	DECOBJ МОЖЕТ ИСПОЛЬЗОВАТЬСЯ КАК ДЛЯ ДЕКОДИРОВАНИЯ КОДА, ПОЛУЧЕННОГО
В РЕЗУЛЬТАТЕ КОМПИЛЯЦИИ С ЯЗЫКА ВЫСОКОГО УРОВНЯ, ТАК И ДЛЯ ДЕКОДИРОВАНИЯ
РАЗЛИЧНЫХ ПРОГРАММ, НАПИСАННЫХ НА MACRO-11, ДЛЯ КОТОРЫХ ПО РАЗНЫМ 
ПРИЧИНАМ ОТСУТСТВУЮТ ИСХОДНЫЕ ТЕКСТЫ.
.LIN
	ВОЗМОЖНОСТИ DECOBJ ПО СРАВНЕНИЮ С ДРУГИМИ ДЕКОДЕРАМИ (DISOBJ,ORC) :
.AND 0
	ИМЕЕТСЯ МНОГО УДОБЫХ СРЕДСТВ ДЛЯ ОТДЕЛЕНИЯ ИНСТРУКЦИЙ ОТ ДАННЫХ,
	ЧТО ПРАКТИЧЕСКИ ОТСУТСТВУЕТ В ДРУГИХ ДЕКОДЕРАХ;
.AND 0
	ПРЕОБРАЗОВАНИЕ ОБ'ЕКТНОГО МОДУЛЯ В АССЕМБЛЕР НАИБОЛЕЕ ЧИСТОЕ,
	ПРАКТИЧЕСКИ ВСЕГДА ПОЛНОСТЬЮ СООТВЕСТВУЕТ ИСХОДНОМУ МОДУЛЮ, И ПРИ
	ПОСЛЕДУЮЩЕМ АССЕМБЛИРОВАНИИ ДАЕТ ОБ'ЕКТНЫЙ КОД, ПОЛНОСТЬЮ СОВПАДАЮЩИЙ
	С ИСХОДНЫМ ОБ'ЕКТНЫМ МОДУЛЕМ. (НЕСООТВЕТСТВИЕ МОЖЕТ ПОЯВИТЬСЯ ПРИ
	ДЕКОДИРОВАНИИ КОДА, ПОЛУЧЕННОГО ПРИ КОМПИЛЯЦИИ
	С ЯЗЫКА ВЫСОКОГО УРОВНЯ)
.AND 0
	ИМЕЮТСЯ СРЕДСТВА ДЛЯ ПРЕДСТАВЛЕНИЯ МОДУЛЯ В ВИДЕ, НАИБОЛЕЕ
	УДОБНОМ ДЛЯ ПОСЛЕДУЩЕЙ МОДИФИКАЦИИ.

.CPT ВЫЗОВ НА ВЫПОЛНЕНИЕ
.LIN
ЗАПУСК ПРОГРАММЫ DECOBJ ПРОИЗВОДИТСЯ В СТАНДАРТНОЙ ДЛЯ RT-11 ФОРМЕ:
.SWT 1
	.RU DEC 	! ФАЙЛ DEC.SAV НАХОДИТСЯ НА DK:
.BLN 0
ИЛИ
.SWT 0
	.R DEC		! ФАЙЛ DEC.SAV НАХОДИТСЯ НА SY:
.BLN 1
ИЛИ С ИСПОЛЬЗОВАНИЕМ CCL (RT-11 V05)
.SWT 1
	.DEC		! ФАЙЛ DEC.SAV НАХОДИТСЯ НА SY:
.LIN 1
СИНТАКСИС КОМАНДНОЙ СТРОКИ ТАКЖЕ СТАНДАРТНЫЙ, В ФОРМАТЕ CSI:
.SWT 1
	*OUTSPEC/SWITCHES=INSPEC/SWITCHES
.BLN 1
ИСПОЛЬЗУЯ ФОРМАТ CCL, МОЖНО УКАЗАТЬ КОМАНДНУЮ СТРОКУ СРАЗУ ПРИ ВЫЗОВЕ,
НАПРИМЕР:
.SWT 1
	.DEC INSPEC/SWITCHES OUTSPEC/SWITCHES
.LIN 1
INSPEC,OUTSPEC - СПЕЦИФИКАЦИИ ВХОДНОГО И ВЫХОДНОГО ФАЙЛА В СТАНДАРТНОМ
ФОРМАТЕ:
.SWT 1
DEV:FILNAM:EXT[SIZE]
.AND 1
 РАСШИРЕНИЕ ПО УМОЛЧАНИЮ ДЛЯ ВХОДНОГО ФАЙЛА : .OBJ
.AND 0
 РАСШИРЕНИЕ ПО УМОЛЧАНИЮ ДЛЯ ВЫХОДНОГО ФАЙЛА : .MAC
.LIN
 ЕСЛИ УКАЗАН ТОЛЬКО ВХОДНОЙ ФАЙЛ , ТО ВЫВОД БУДЕТ НАПРАВЛЕН НА
КОНСОЛЬНЫЙ ТЕРМИНАЛ. НАПРИМЕР:
.SWT 1
	.DEC INSPEC/SWITCHES
.LIN 2
  ЕСЛИ ВХОДНОЙ ФАЙЛ - БИБЛИОТЕКА, ТО DECOBJ ВЫДАЕТ ПОДСКАЗКУ
.SWT 1
       GLOBAL?
.BLN 1
 И ИЩЕТ МОДУЛЬ С ЭТИМ ИМЕНЕМ В БИБЛИОТЕКЕ.
.LIN 1
ПРИМЕР:
.SWT 1
 .DEC SY:SYSLIB
 GLOBAL? PRINT
	 .TITLE	PRINT
	 .GLOBL	$SYSLB
	 .PSECT	SYS$I ,CON,RW,REL,LCL,I
 .ENABL	 LSB

	 .PSECT	SYS$I
 PRINT::
	 MOV	 2(R5),R0	    ;		   "@"
	 EMT	 351
	 RETURN
 .DSABL	 LSB
	 .END

.LIN 1
ФОРМАТ КЛЮЧЕЙ:
КЛЮЧИ DECOBJ В НАСТОЯЩЕЕ ВРЕМЯ ИМЕЮТ ДВА ФОРМАТА:
.BLN0
1) КЛЮЧИ БЕЗ ПАРАМЕТРОВ, НАПРИМЕР КЛЮЧ /F;
.BLN 0
2) КЛЮЧИ С ПАРАМЕТРАМИ:
.SWT 1
	/SWITCH[:VAL][:VAL]...
.BLN 0
ГДЕ VAL - ТРЕХБУКВЕННАЯ СИМВОЛИКА ПАРАМЕТРА, ЕСЛИ ПАРАМЕТРОВ УКАЗАНО НЕСКОЛЬКО,
ТО ОНИ ДЕЙСВУЮТ ОДНОВРЕМЕННО, ОБ'ЕДИНЯЯСЬ ПО СХЕМЕ "И".

.CPT ФОРМАТ ВЫХОДНОГО АССЕМБЛЕРНОГО ТЕКСТА
.LIN 1
ВЫХОДНОЙ ТЕКСТ DECOBJ СОСТОИТ ИЗ ДВУХ ЧАСТЕЙ:
.BLN 0
1) РЕЗУЛЬТА ДЕКОДИРОВАНИЯ GSD:
.SWT 1
	.TITLE	XXXXXX
	.IDENT	/XXXXXX/
	.GLOBL	XXXXXX	XXXXXX	XXXXXX	...
	.PSECT	XXXXXX,...
	XXXXXX==NNNNNN
.BLN
	T.E. ИЗ НАИМЕНОВАНИЯ МОДУЛЯ, ВЕРСИИ МОДУЛЯ (МОЖЕТ ОТСУТСТВОВАТЬ),
	ГЛОБАЛЬНЫХ ССЫЛОК И ОПРЕДЕЛЕНИЙ АБСОЛЮТНЫХ ГЛОБАЛЬНЫХ СИМВОЛОВ,
	А ТАКЖЕ ОПРЕДЕЛЕНИЯ ИМЕН, ФЛАГОВ СЕКЦИЙ И ПОРЯДКА ИХ СЛЕДОВАНИЯ.
.BLN 1
2) АССЕМБЛЕРНОГО КОДА ПРОГРАММЫ, КОММЕНТИРОВАННАЯ СООТВЕТСТВУЮЩИМ
ВОСМЕРИЧНЫМ, ASCII И RADIX 50 ЭКВИВАЛЕНTOM.
.BLN 0
НАПРИМЕР:
.SWT 1
	 .TITLE  TEST
	 .IDENT  /V01.00/
	 .GLOBL  STACHR
	 .PSECT        ,CON,RW,REL,LCL,I
 .ENABL  LSB

	 .PSECT
 DEF.CH::
	 MOV	 #101,R0    ;000000 012700  000101  "A" /CSH AY/
	 CLR	 STACHR     ;000004 005067  000000G "7" /AYO/
	 MOV	 #B00014,R5 ;000010 012705  000014'	/CSM/
 B00014: RETURN 	    ;000014 000207		/ CO/
 .DSABL  LSB
	 .END
.LIN 1
КОММЕНТАРИЙ НАЧИНАЕТСЯ С 36 ПОЗИЦИИ И СОСТОИТ ПРИ ПОЛНОМ ВЫБОРЕ (КЛЮЧ /C) ИЗ:
.BLN 1
1) СОДЕРЖИМОГО СЧЕТЧИКА ИНСТРУКЦИЙ ТЕКУЩЕЙ СЕКЦИИ;
.BLN 0
2) ВОСМЕРИЧНОГО ЭКВИВАЛЕНТА СЛОВ ИНСТРУКЦИИ;
.BLN 0
3) ASCII - ЭКВИВАЛЕНТА СЛОВ ИНСТРУКЦИИ (С 61 ПОЗИЦИИ), ПРИЧЕМ ДЛЯ НЕПЕЧАТНЫХ
СИМВОЛОВ ПОЗИЦИЯ НЕ ОТВОДИТСЯ;
.BLN 0
4) RADIX - 50 ЭКВИВАЛЕНТА СЛОВ ИНСТРУКЦИИ (С 70 ПОЗИЦИИ).
.LIN 3
СОГЛАШЕНИЯ ОТНОСИТЕЛЬНО МЕТОК(СИМВОЛОВ), ГЕНЕРИРУЕМЫХ DECOBJ.
.LIN 1
DECOBJ ГЕНЕРИРУЕТ СЛЕДУЮЩИЕ ВИДЫ МЕТОК:
.BLN 1
1) ГЛОБАЛЬНЫЕ СИМВОЛЫ, ОПРЕДЕЛЕННЫЕ В GSD, НАПРИМЕР:
.SWT 1
	START::
.BLN 1
2) ЛОКАЛЬНЫЕ СИМВОЛЫ. ПРИМЕР:
.SWT 1
	B00026:
ИЛИ
	B26:
(ПРИ КОРОТКОЙ ФОРМЕ ВЫВОДА, КЛЮЧ /E:SHR)
.BLN 0
БУКВА (B) ОБОЗНАЧАЕТ ВОСМЕРИЧНЫЙ ПОРЯДКОВЫЙ НОМЕР СЕКЦИИ, В КОТОРОЙ
ОПРЕДЕЛЕН СИМВОЛ, А НОМЕР - АДРЕС ОПРЕДЕЛЕНИЯ ИЛИ
(ПРИ УКАЗАННОМ КЛЮЧЕ /E:NUM) ДЕСЯТИЧНЫЙ ПОРЯДКОВЫЙ НОМЕР МЕТКИ.
.BLN 1
3) ЛОКАЛЬНЫЕ МЕТКИ (НЕ ПУТАТЬ С ЛОКАЛЬНЫМИ СИМВОЛАМИ! ). ПРИМЕР:
.SWT 1
	25$:
.BLN 1
НОМЕР ОБОЗНАЧАЕТ ВОСМЕРИЧНЫЙ АДРЕС ОПРЕДЕЛЕНИЯ ИЛИ
(ПРИ УКАЗАННОМ КЛЮЧЕ /E:NUM) ДЕСЯТИЧНЫЙ ПОРЯДКОВЫЙ НОМЕР МЕТКИ.
.LIN 2
ГЛОБАЛЬНЫЕ СИМВОЛЫ ВСЕГДА ОПРЕДЕЛЯЮТСЯ В GSD, А ДЛЯ ГЕНЕРАЦИИ ЛОКАЛЬНЫХ
СИМВОЛОВ И МЕТОК ИМЕЮТСЯ НЕСКОЛЬКО РАЗЛИЧНЫХ СПОСОБОВ. В ПЕРВОМ СЛУЧАЕ
(РЕЖИМ ПО УМОЛЧАНИЮ) ЛОКАЛЬНЫЕ СИМВОЛЫ ГЕНЕРИРУЮТСЯ ТОЛЬКО ПРИ УКАЗАНИИ
ИХ В RLD (МОДИФИЦИРОВАННЫЕ СИМВОЛЫ), Т.Е. КОГДА СИМВОЛ ЯВНО ЯВЛЯЕТСЯ
АДРЕСОМ, ТРЕБУЮЩЕМ ПЕРЕМЕЩЕНИЯ ПРИ КОМПОНОВКЕ. ЛОКАЛЬНЫЕ МЕТКИ ПОЯВЛЯЮТСЯ
ВО ВСЕХ ОСТАЛЬНЫХ СЛУЧАЯХ. В ВТОРОМ СЛУЧАЕ, (ПРИ УКАЗАННОМ КЛЮЧЕ /E:BLL)
ЛОКАЛЬНЫЕ МЕТКИ ГЕНЕРИРУЮТСЯ ТОЛЬКО ДЛЯ ИНСТРУКЦИЙ КОРОТКИХ ПЕРЕХОДОВ,
А ДЛЯ ВО ВСЕХ ОСТАЛЬНЫХ СЛУЧАЯХ (ВЫЗОВ ПОДПРОГРАММЫ ПО JSR, ПЕРЕСЫЛКА
ДАННЫХ ИНСТРУКЦИЕЙ MOV С ОТНОСИТЕЛЬНОЙ АДРЕСАЦИЕЙ, И Т.Д.)
ГЕНЕРИРУЮТСЯ ЛОКАЛЬНЫЕ МЕТКИ, ЧТО НАИБОЛЕЕ УДОБНО ДЛЯ ЧТЕНИЯ ТЕКСТА.

.CPT ОПИСАНИЕ КЛЮЧЕЙ.
.HLV 1
КЛЮЧ ВЫБОРА НАБОРА ИНСТРУКЦИЙ ДЕКОДИРУЕМЫХ В МНЕМОНИКУ - /P
.BLN 1
.MID *******************
.MID *    /P[:VAL]     *
.MID *******************
.LIN 2
КЛЮЧ /P[:VAL] ИСПОЛЬЗУЕТСЯ ДЛЯ ОГРАНИЧЕНИЯ НАБОРА ИНСТРУКЦИЙ, ДЕКОИРУЕМЫХ
В АССЕМБЛЕРНУЮ МНЕМОНИКУ. ИНСТРУКЦИИ, КОТОРЫЕ НЕ ВЫБРАНЫ, БУДУТ ДЕКОДИРОВАТЬСЯ
КАК .WORD .
.BLN 3
.DFN LSI
ДЕКОДИРОВАТЬ ИНСТРУКЦИИ ЧТЕНИЯ И ЗАПИСИ СЛОВА СОСТОЯНИЯ ПРОЦЕССОРА LSI-11
(MTPS,MFPS).
.DFN M18
ДЕКОДИРОВАТЬ ИНСТРУКЦИИ ДЛЯ ОБСЛУЖИВАНИЯ 18-РАЗРЯДНОГО ДИСПЕТЧЕРА
ПАМЯТИ PDP-11/40, CM-4 (MTPI,MFPI).
.DFN M22
ДЕКОДИРОВАТЬ ИНСТРУКЦИИ ДЛЯ ОБСЛУЖИВАНИЯ 22-РАЗРЯДНОГО ДИСПЕТЧЕРА
ПАМЯТИ С РАЗДЕЛЕННЫМ ПРОСТРАНСТВАМИ ИНСТРУКЦИЙ/ДАННЫХ PDP-11/45,
ЭЛЕКТРОНИКА-79 (MTPD,MFPD).
.DFN P40
ДЕКОДИРОВАТЬ ДОПОЛНИТЕЛЬНЫЙ НАБОР ИНСТРУКЦИЙ PDP-11/40,ДВК (XOR,SOB,MARK,RTT,SXT).
.DFN P45
РАСПОЗНАВАТЬ ИНСТРУКЦИЮ SPL , РЕАЛИЗОВАННУЮ В МОДЕЛИ PDP-11/45 И СТАРШЕ
(ТОЛЬКО ДЛЯ МАШИН С "ОБШЕЙ ШИНОЙ").
.DFN EIS
ДЕКОДИРОВАТЬ РАСШИРЕННЫЙ НАБОР ИНСТРУКЦИЙ "EXTENDED INSTRUCTION SET (EIS)" -
(DIV,MUL,ASH,ASHC).
.DFN FIS
ДЕКОДИРОВАТЬ ИНСТРУКЦИИ С ПЛАВАЮЩЕЙ ЗАПЯТОЙ "FLOATING INSTRUCTION SET (FIS)" -
(FADD,FSUB,FMUL,FDIV). ОДНОВРЕМЕННО ВКЛЮЧАЕТСЯ ДЕКОДИРОВАНИЕ EIS.
.DFN FPU
ДЕКОДИРОВАТЬ ИНСТРУКЦИИ ПРОЦЕССОРА С ПЛАВАЮЩЕЙ ЗАПЯТОЙ "FP11 HARDWARE FLOATING POINT UNIT".
.DFN KNL
ДЕКОДИРОВАТЬ ИНСТРУКЦИИ, ВЫПОЛНЯЮЩИЕСЯ ТОЛЬКО В КАНАЛЬНОМ РЕЖИМЕ (KERNEL) ПРОЦЕССОРА.
.DFN CIS
ДЕКОДИРОВАТЬ НАБОР КОММЕРЧЕСКИХ ИНСТРУКЦИЙ "COMMERCIAL INSTRUCTION SET (CIS)".
.DFN MIC
ДЕКОДИРОВАТЬ НАБОР ИНСТРУКЦИЙ MICRO-PDP (MICRO PDP-11/23,73,ЭЛЕКТРОНИКА 85)
.DFN CM4
ДЕКОДИРОВАТЬ НАБОР ИНСТРУКЦИЙ ПРОЦЕССОРА СМ-4
.DFN CM3
ДЕКОДИРОВАТЬ НАБОР ИНСТРУКЦИЙ ПРОЦЕССОРА СМ-3
.DFN E60
ДЕКОДИРОВАТЬ НАБОР ИНСТРУКЦИЙ ПРОЦЕССОРА ЭЛЕКТРОНИКА-60M
.DFN E85
ДЕКОДИРОВАТЬ НАБОР ИНСТРУКЦИЙ ПРОЦЕССОРА ЭЛЕКТРОНИКА-85
.DFN E79
ДЕКОДИРОВАТЬ НАБОР ИНСТРУКЦИЙ ПРОЦЕССОРА ЭЛЕКТРОНИКА-79
.DFN BAS
ДЕКОДИРОВАТЬ ТОЛЬКО БАЗОВЫЙ НАБОР ИНСТРУКЦИЙ
.DFN FUL
ДЕКОДИРОВАТЬ ВСЕ ВОЗМОЖНЫЕ ИНСТРУКЦИИ

