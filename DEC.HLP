
	 Д Е К О Д Е Р	О Б ' Е К Т Н Ы Х  М О Д У Л Е Й
----------------------------------------------------------------------

		      ВЕРСИЯ: V09.09

		      BDM, 7-JAN-89


   ЗА ИСХОДНЫМИ ТЕКСТАМИ И РУКОВОДСТВОМ ПО ЭКСПЛУАТАЦИИ
ОБРАЩАТЬСЯ:

  +-------------------------------------------------+
  !						    !
  ! БОРОВИКОВ ДМИТРИЙ МИХАЙЛОВИЧ, МВТУ/НИИСМ/ОМПС   !
  !						    !
  +-------------------------------------------------+



 ВЫЗОВ:
       .RU DEC
       *[OUTSPC]![DIASPC]=INSPC,[DIASPC]/SWITCHES ! СТАНДАРТНЫЙ ФОРМАТ CSI
 ИЛИ
       .DEC INSPC,[DIASPC] [OUTSPC]![DIASPC]/SWITCHES ! ФОРМАТ CCL

 (ФАЙЛ DEC.SAV ДОЛЖЕН НАХОДИТЬСЯ НА SY: )

 ИЛИ
       .DEC INSPC/SWITCHES
 (ВЫВОД БУДЕТ НАПРАВЛЕН НА ТЕРМИНАЛ)

 РАСШИРЕНИЕ ПО УМОЛЧАНИЮ ДЛЯ ВХОДНОГО ФАЙЛА :  .OBJ -- INSPC
 РАСШИРЕНИЕ ПО УМОЛЧАНИЮ ДЛЯ ВЫХОДНОГО ФАЙЛА : .MAC -- OUTSPC
 РАСШИРЕНИЕ ПО УМОЛЧАНИЮ ДЛЯ ФАЙЛА ДИАЛОГА :   .DIA -- DIASPC

 ЕСЛИ ВЫХОДНОЙ ФАЙЛ НЕ УКАЗАН, ТО ВЫВОД БУДЕТ НАПРАВЛЕН НА ТЕРМИНАЛ.
     НАПРИМЕР:
       *SY:ODT

  ЕСЛИ ВХОДНОЙ ФАЙЛ - БИБЛИОТЕКА, ТО DECOBJ ВЫДАЕТ ПОДСКАЗКУ
       GLOBAL?
  И ИЩЕТ МОДУЛЬ С ЭТИМ ИМЕНЕМ В БИБЛИОТЕКЕ.

 КЛЮЧИ:

1)	/B - ДЕКОДИРОВАТЬ ФАЙЛ В РЕЖИМЕ ДИАЛОГА. В ЭТОМ РЕЖИМЕ ФОРМИРУЕТСЯ
	ФАЙЛ ДИАЛОГА .DIA. ДАЛЕЕ, ПРИ ДЕКОДИРОВАНИИ В АВТОМАТИЧЕСКОМ
	РЕЖИМЕ С ПОМОЩЬЮ ФАЙЛА .DIA МОЖНО ПОЛУЧИТЬ ДЕКОИРОВАННЫЙ
	ФАЙЛ НА ЯЗЫКЕ АССЕМБЛЕРА.

 ДОПУСТИМЫЕ КОМАНДЫ (В СКОБКАХ УКАЗАНО ДОПУСТИМОЕ СОКРАЩЕНИЕ) :

 1. INS (I) - ДЕКОДИРОВАТЬ В ВИДЕ ИНСТРУКЦИЙ

- СЕКЦИЯ С АТРИБУТОМ I НАЧИНАЕТ ДЕКОДИРОВАТЬСЯ КАК ИНСТРУКЦИИ
- СЕКЦИЯ С АТРИБУТОМ D НАЧИНАЕТ ДЕКОДИРОВАТЬСЯ КАК ДАННЫЕ (.WORD )

 2. WRD (W) - ДЕКОДИРОВАТЬ В ВИДЕ .WORD

 3. BYT (B) - ДЕКОДИРОВАТЬ В ВИДЕ .BYTE

 4. ASC (A) - ДЕКОДИРОВАТЬ В ВИДЕ .ASCII

 5. ASN - ДЕКОДИРОВАТЬ В ВИДЕ .ASCII. ПЕРВЫЙ БАЙТ ОПРЕДЕЛЯЕТ ДЛИНУ СТРОКИ .ASCII.

 6. RAD (R) - ДЕКОДИРОВАТЬ В ВИДЕ .RAD50

 7. RLW[:BASE] - ДЕКОДИРОВАТЬ ВЫРАЖЕНИЯ ТИПА .WORD   LABEL-BASE

	   1 НЕОБЯЗАТЕЛЬНЫЙ ПАРАМЕТР - БАЗА СМЕЩЕНИЯ.

 8. RLB[:BASE] - ДЕКОДИРОВАТЬ ВЫРАЖЕНИЯ ТИПА .BYTE <LABEL-BASE>/2

 9. BASE:RELBASE - УСТАНОВИТЬ БАЗУ СМЕЩЕНИЯ ДЛЯ RLW,RLB,^!

 10. ENDCHR:CODE - КОД СИМВОЛА,ПОСЛЕ КОТОРОГО НАЧИНАЕТСЯ НОВАЯ СТРОКА .ASCII .
		  (ПО УМОЛЧАНИЮ 12 - LF)
	          НОВАЯ СТРОКА ТАКЖЕ НАЧИНАЕТСЯ ПОСЛЕ КОДОВ 0 (.ASCIZ) И 200

 11. BEGCHR:CODE - КОД СИМВОЛА, С КОТОРОГО НАЧИНАЕТСЯ НОВАЯ СТРОКА .ASCII .
		  (ПО УМОЛЧАНИЮ 33 - ESC)
 12. DELIM:CODE - КОД СИМВОЛА-ОГРАНИЧИТЕЛЯ СТРОКИ ASCII .
		 (ПО УМОЛЧАНИЮ - /)

 13. ALEN (LN) - УСТАНОВИТЬ ДЛИНУ СТРОКИ ASCII

	   ПЕРВЫЙ ПАРМЕТР ОБОЗНАЧАЕТ МАКС. ДЛИНУ СТРОКИ ASCII.
	ДЕЙСТВИЕ РАСПРОСТРАНЯЕТСЯ НА ОДНУ СТРОКУ.
	ЕСЛИ УКАЗАН ВТОРОЙ ПАРАМЕТР SET, ДЕЙСТВИЕ ПРОДОЛЖАЕТСЯ ДО
	СЛЕДУЮЩЕЙ КОМАНДЫ ALEN.
	   ЕСЛИ ПАРАМЕТРЫ НЕ УКАЗАНЫ, ТО ПО УМОЛЧАНИЮ ВЫПОЛНЯЕТСЯ
	КОМАНДА ALEN:60.:SET

 14. NO# (N#) - ЗАПРЕТИТЬ НЕПОСРЕДСТВЕНУЮ АДРЕСАЦИЮ (ИНТЕРПРЕТИРОВАТЬ КАК (PC)+ ).

СЛЕДУЮЩИЕ КОМАНДЫ ПРИМЕНИМЫ ДЛЯ ИНТЕРПРЕТАЦИИ ЗНАЧЕНИЙ .WORD, .BYTE, #

 15. ^R - ВЫВОДИТЬ В ВИДЕ RAD50 ( <^RXXX> ).

 16. ^D - ВЫВОДИТЬ В ДЕСЯТИЧНОМ ВИДЕ.

 17. ^O - ВЫВОДИТЬ В ВОСМЕРИЧНОМ ВИДЕ.

 18. ^B - ВЫВОДИТЬ В ДВОИЧНОМ ВИДЕ.

 19. ^C - ВЫВОДИТЬ В ВИДЕ ДОПОЛНЕНИЯ. (^C<XX>)

 20. ' - ВЫВОДИТЬ В ASCII, 1 БАЙТ.

 21. " - ВЫВОДИТЬ В ASCII, 2 БАЙТА.

 22. ^! - ВЫВОДИТЬ В ВИДЕ LABEL-BASE. BASE УСТАНАВЛИВАЕТСЯ ПО КОМАНДЕ 'BASE'

 23. ^. - ВЫВОДИТЬ В ВИДЕ LABEL-.

 24. ^N - ВОССТАНОВИТЬ ДЕКОДИРОВАНИЕ ПО УМОЛЧАНИЮ

 25. ENABL (EN) - ВКЛЮЧИТЬ ПАРАМЕТР (АНАЛОГИЧНО КЛЮЧУ /E)

 26. DSABL (DS) - ВЫКЛЮЧИТЬ ПАРАМЕТР (АНАЛОГИЧНО КЛЮЧУ /D)
	ДОПУСТИМО ВКЛЮЧЕНИЕ/ВЫКЛЮЧЕНИЕ ТОЛЬКО ПАРАМЕТРОВ ASB,SIG,BI8

 СЛЕДУЮЩИЕ КОМАНДЫ ВЫПОЛНЯЮТСЯ ТОЛЬКО В РЕЖИМЕ ДИАЛОГА

 27. COM - ОПРЕДЕЛЕНИЕ ВЫВОДИМОГО КОММЕНТАРИЯ (АНАЛОГИЧНО КЛЮЧУ /C)

 28. LIST:TYPE:ARGS (LI) - НАЧАТЬ ПОИСК С ВЫВОДОМ НА ТЕРМИНАЛ.
	ВОЙТИ ОБРАТНО В ДИАЛОГ МОЖНО НАЖАТИЕМ ЛЮБОЙ КЛАВИШИ НА ТЕРМИНАЛЕ.

 29. FIND:TYPE:ARGS (F) - НАЧАТЬ ПОИСК. ВЫВОД НА ТЕРМИНАЛ ПРЕКРАЩАЕТСЯ.
	ВОЙТИ ОБРАТНО В ДИАЛОГ МОЖНО НАЖАТИЕМ ЛЮБОЙ КЛАВИШИ НА ТЕРМИНАЛЕ.
	TYPE - СИМВОЛИЧЕСКОЕ ИМЯ ТИПА ПОИСКА:

	EOF		- (ПО УМОЛЧАНИЮ) ДЕКОДИРОВАНИЕ ИДЕТ ДО КОНЦА ФАЙЛА.
	LREF:@LABEL	- ПОИСК ЛОКАЛЬНОЙ ССЫЛКИ (ВНУТРИ ОБ'ЕКТНОГО МОДУЛЯ).
	GREF:*LABEL	- ПОИСК ССЫЛКИ НА ГЛОБАЛЬНЫЙ СИМВОЛ ВНЕ ОБ'ЕКТНОГО МОДУЛЯ.
	DEF:@LABEL	- ПОИСК ОПРЕДЕЛЕНИЯ МЕТКИ
	DINT		- ПОИСК РАСКРЫТИЯ АДРЕСАЦИИ (PC)+
	BADAD		- ПОИСК АДРЕСАЦИЙ ТИПА PC,@PC,-(PC),@-(PC)
	ODDAD		- ПОИСК НЕЧЕТНОЙ АДРЕСАЦИИ В СЛОВНЫХ ИНСТРУКЦИЯХ
	LINS		- ПОИСК ИНСТР., НА КОТОРЫЕ НИКОДА НЕ ПЕРЕДАЕТСЯ УПРАВЛЕНИЕ
	FBYT:ARG	- ПОИСК БАЙТА, ЗАДАННОГО АРГУМЕНТОМ.
	FWRD:ARG	- ПОИСК СЛОВА, ЗАДАННОГО АРГУМЕНТОМ.
	FPS:*PSECT	- ПОИСК СЕКЦИИ С ИМЕНЕМ PSECT

 30. CONT (C) - ПРОДОЛЖИТЬ ПОИСК. (ДЛЯ КОМАНД FIND,LIST).

 31. BSI (^,<LF>) - ВОЗВРАТИТЬСЯ НА ОДНУ ИНСТРУКЦИЮ НАЗАД.

 32. BST (BT) - ВОЗВРАТИТСЯ НА 100 ВОСМЕРИЧНЫХ БАЙТ НАЗАД.

 33. BEGIN (BEG) - ВОЗВРАТИТЬСЯ НА НАЧАЛО ФАЙЛА.

 34. MARK (M.) - ОТМЕТИТЬ ТЕКУЩУЮ СТРОКУ. НА ОТМЕЧЕННОЙ СТРОКЕ ПРЕКРАЩАЕТСЯ
		 ВЫПОЛНЕНИЕ MACRO И ПОИСКА.

 35. GMARK (G.) - ВОЗВРАТИТЬСЯ К СТРОКЕ, ОТМЕЧЕННОЙ MARK

 36. DELC (DC) - УДАЛИТЬ КОМАНДУ, ВВЕДЕННУЮ НА ДАННОЙ СТРОКЕ.

	КОМАНДА, ВВЕДЕННАЯ НА ДАННОЙ СТРОКЕ, ОТМЕЧАЕТСЯ В ПОДСКАЗКЕ СИМВОЛОМ '>'
	ПОСЛЕ ИМЕНИ КОМАНДЫ. ЕСЛИ КОМАНДА ВВЕДЕНА НЕ НА ТЕКУЩЕЙ СТРОКЕ, А РАНЬШЕ,
	ТО ПОДСКАЗКА БУДЕТ ОТМЕЧАТЬСЯ СИМВОЛОМ ':'

 37. INSLAB:*NAME (IL) - ВСТАВИТЬ СИМВОЛИЧЕКУЮ МЕТКУ ПО ДАННОМУ АДРЕСУ

	ИМЕНИ НАМЕ БУДЕТ ПРИСВОЕН ТЕКУЩИЙ АДРЕС СТРОКИ.
	ЕСЛИ УКАЗАНА ВЫХОДНОЙ ФАЙЛ DIASPC, В НЕГО БУДЕТ ВЫВЕДЕНО ЭТО ОПРЕДЕЛЕНИЕ.

 38. INSREF:*NAME:REF (IR) - ВСТАВИТЬ СИМВОЛИЧЕСКУЮ МЕТКУ ПО ССЫЛКЕ.

	ИМЕНИ NAME БУДЕТ ПРИСВОЕН АДРЕС ССЫЛКИ В КОМАНДЕ.
	ВОЗМОЖЕН НЕОБАЗАТЕЛЬНЫЙ ПАРАМЕТР REF - НОМЕР ССЫЛКИ В СТРОКЕ.
	ПО УМОЛЧАНИЮ - ПЕРВАЯ ССЫЛКА.

 39. MACRO - НАЧАТЬ ОПРЕДЕЛЕНИЕ MACRO.

 40. MEND - ЗАКОНЧИТЬ ОПРЕДЕЛЕНИЕ MACRO.

 41. EXEC:NNN (EM) - ВЫПОЛНИТЬ ОПРЕДЕЛЕННОЕ MACRO NNN РАЗ. (ПО УМОЛЧАНИЮ - 1 РАЗ).

 42. EXIT - ВЫЙТИ ИЗ ДИАЛОГА ( ФАЙЛ DIASPC ЗАПИСЫВАЕТСЯ)

 43. QUIT - АВАРИЙНЫЙ ВЫХОД ИЗ ДИАЛОГА ( ФАЙЛ DIASPC НЕ ЗАПИСЫВАЕТСЯ)

 44. SHOW:TYPE (SH) - ВЫВЕСТИ СОСТОЯНИЕ DECOBJ. TYPE - СИМВОЛИЧЕСКОЕ ИМЯ СПРАВКИ.

	MEM - ВЫДАТЬ СПРАВКУ О СВОБОДНОЙ ДИНАМИЧЕСКОЙ ПАМЯТИ.
	PSECT - СПИСОК СЕКЦИЙ
	BASE
	DELIM
	ENDCHR
	BEGCHR
	ALEN
	MODE
	MACRO
	LABEL:@LABNAM


2)	/P[:VAL] - ЗАДАТЬ НАБОР ИНСТРУКЦИЙ ПРОЦЕССОРА, КОТОРЫЙ БУДЕТ
		   РАСПОЗНАВАТЬСЯ ДЕКОДЕРОМ (ПО УМОЛЧАНИЮ - BAS)
		   ЕСЛИ КЛЮЧ НЕ УКАЗАН, ПРИНИМАЕТСЯ СОЧЕТАНИЕ :
		     P40 + KNL + EIS + LSI

LSI	ДЕКОДИРОВАТЬ ИНСТРУКЦИИ LSI-11 (MFPS,MTPS)
M18	ДЕКОДИРОВАТЬ ИНСТРУКЦИИ 18-РАЗР. ДИСПЕТЧЕРА (PDP-11/40,СМ4)
M22	ДЕКОДИРОВАТЬ ИНСТРУКЦИИ 22-РАЗР. Д.П. С I/D SPACE (PDP-11/45,ЭЛЕКТРОНИКА-79)
P40	ДЕКОДИРОВАТЬ ИНСТРУКЦИИ PDP-11/40 (XOR,SOB,MARK,SXT)
P45	ДЕКОДИРОВАТЬ ИНСТРУКЦИЮ SPL (PDP-11/45 И ДАЛЕЕ)
EIS	ДЕКОДИРОВАТЬ ИНСТРУКЦИИ EIS (DIV,MUL,ASH,ASHC)
FIS	ДЕКОДИРОВАТЬ ИНСТРУКЦИИ FIS+EIS (FADD И Т.Д.)
FPU	ДЕКОДИРОВАТЬ ИНСТРУКЦИИ ПРОЦЕССОРА С ПЛАВАЮЩЕЙ ЗАПЯТОЙ
FPP	ТОЖЕ, ЧТО И FPU
KNL	ДЕКОДИРОВАТЬ ИНСТРУКЦИИ, ВЫПОЛНЯЮЩИЕСЯ В РЕЖИМЕ ЯДРА (KERNEL) ПРОЦЕССОРА
CIS	ДЕКОДИРОВАТЬ НАБОР КОММЕРЧЕСКИХ ИНСТРУКЦИЙ
MIC	ДЕКОДИРОВАТЬ НАБОР ИНСТРУКЦИЙ MICRO-PDP (MICRO PDP-11/23,73,ЭЛЕКТРОНИКА 85)
C42	ДЕКОДИРОВАТЬ НАБОР ИНСТРУКЦИЙ ПРОЦЕССОРА СМ-1420
CM4	ДЕКОДИРОВАТЬ НАБОР ИНСТРУКЦИЙ ПРОЦЕССОРА СМ-4
CM3	ДЕКОДИРОВАТЬ НАБОР ИНСТРУКЦИЙ ПРОЦЕССОРА СМ-3
E60	ДЕКОДИРОВАТЬ НАБОР ИНСТРУКЦИЙ ПРОЦЕССОРА ЭЛЕКТРОНИКА-60M
E85	ДЕКОДИРОВАТЬ НАБОР ИНСТРУКЦИЙ ПРОЦЕССОРА ЭЛЕКТРОНИКА-85
E79	ДЕКОДИРОВАТЬ НАБОР ИНСТРУКЦИЙ ПРОЦЕССОРА ЭЛЕКТРОНИКА-79
BAS	ДЕКОДИРОВАТЬ ТОЛЬКО БАЗОВЫЙ НАБОР ИНСТРУКЦИЙ
FUL	ДЕКОДИРОВАТЬ ВСЕ ИНСТРУКЦИИ

3)	/E[:VAL] - ЗАДАТЬ РАЗЛИЧНЫЕ ХАРАКТЕРИСТИКИ ДЕКОДИРОВАНИЯ
	  (ПО УМОЛЧАНИЮ - FUL). ЕСЛИ КЛЮЧ НЕ УКАЗАН, ПРИНИМАЕТСЯ СОЧЕТАНИЕ :
	  ODD + CAL + SIG + RLS + RLL


ODD	РАЗРЕШИТЬ ДЕКОДИРОВАНИЕ СЛОВНЫХ ИНСТРУКЦИЙ С НЕЧЕТНЫМ ИСПОЛН. АДРЕСОМ
CAL	ЗАМЕНЯТЬ JSR	PC НА CALL , RTS    PC НА RETURN
SIG	ВЫВОДИТЬ ОТРИЦАТЕЛЬНЫЕ КОНСТАНТЫ СO ЗНАКОМ
BLL	СТРОИТЬ ЛОКАЛЬНЫЕ МЕТКИ ТОЛЬКО ДЛЯ ИНСТР. КОРОТКИХ ПЕРЕХОДОВ (BR)
RLL	ЗАМЕНЯТЬ СООТВЕТСТВУЮЩИЕ ЛОКАЛЬНЫЕ МЕТКИ НА ГЛОБАЛЬНЫЕ
RLS	ЗАМЕНЯТЬ СООТВЕТСТВУЮЩИЕ ЛОКАЛЬНЫЕ СИМВОЛЫ НА ГЛОБАЛЬНЫЕ
REP	РАЗРЕШЕНИЕ ПОВТОРЯТЬ МЕТКИ.
NUM	ПОСЛЕДОВАТЕЛЬНО НУМЕРОВАТЬ МЕТКИ
SHR	ВЫВОД "КОРОТКИХ" ЛОКАЛЬНЫХ СИМВОЛОВ ( УСЕЧЕНИЕ ВЕД. НУЛЕЙ)
DLL	ЗАПРЕТИТЬ ПОСТРОЕНИЕ ЛОКАЛЬНЫХ МЕТОК
PSE	ВЫВОДИТЬ ИНФОРМАЦИЮ О СЕКЦИЯХ (ДЛИНА,ПОРЯДКОВЫЙ НОМЕР)
ASB	ВЫВОДИТЬ MOVB #'A,XXX
ABS	ПРОСТАВЛЯТЬ АБСОЛЮТНО ОПРЕДЕЛЕННЫЕ ГЛОБАЛЬНЫЕ СИМВОЛЫ В .ASECT
GBL	СОРТИРОВАТЬ ГЛОБАЛЬНЫЕ ССЫЛКИ ПО АЛФАВИТУ.
BI8	РАСПОЗНАВАТЬ 8-BIT ASCII ПО КОМАНДАМ ASC,ACN
LOC	НУМЕРОВАТЬ ЛОКАЛЬНЫЕ МЕТКИ В ПРЕДЕЛАХ ЛОКАЛЬНЫХ БЛОКОВ (LOCAL 1 1)
FUL	СОЧЕТАНИЕ : ODD + CAL + SIG + RLS + RLL + BLL + NUM +GBL
CLN	СОЧЕТАНИЕ : ODD + CAL + SIG + RLS
ALL	СОЧЕТАНИЕ ПАРАМЕТРОВ ODD - LOC

4)	/D[:VAL] - ВЫКЛЮЧИТЬ ПАРАМЕТР КЛЮЧА /E
	   ( ПО УМОЛЧАНИЮ - ALL )

5)	/C[:VAL] - УКАЗАТЬ , ЧТО БУДЕТ ВЫВОДИТЬСЯ В КОММЕТАРИИ
	   ( ПО УМОЛЧАНИЮ - ALL ). ЕСЛИ КЛЮЧ НЕ УКАЗАН, УСТАНАВЛИВАЕТСЯ
	    КОММЕНТАРИЙ ASC.

LC	ВЫВОДИТЬ LC
WRD	ВЫВОДИТЬ СЛОВА ИНСТРУКЦИЙ И ДАННЫХ
ASC	ВЫВОДИТЬ КОММЕНТАРИЙ .ASCII
RAD	ВЫВОДИТЬ КОММЕНТАРИЙ .RAD50
NUL	НЕ ВЫВОДИТЬ КОММЕНТАРИЙ
ALL	СОЧЕТАНИЕ : LC + WRD + ASC + RAD (ПОЛНЫЙ КОММЕНТАРИЙ)

6)	/S:VAL - УКАЗАТЬ, СКОЛЬКО ИНСТРУКЦИЙ БУДЕТ СОХРАНЯТЬСЯ ДЛЯ ВОЗРАТА
	   ПО КОМАНДЕ BI (^). ЗНАЧЕНИЕ ДОЛЖНО БЫТЬ ОБЯЗАТЕЛЬНО УКАЗАНО.
	   ЕСЛИ КЛЮЧ НЕ УКАЗАН, СОХРАНЯЮТСЯ ПОСЛЕДНИЕ 100. ИНСТРУКЦИЙ.
	   НА СОХРАНЕНИЕ КАЖДОЙ ИНСТРУКЦИИ ТРЕБУЕТСЯ 6 СЛОВ.

7)	/T:VAL - УКАЗАТЬ, СКОЛЬКО БЛОКОВ ПО 100 БАЙТ БУДЕТ СОХРАНЯТЬСЯ ДЛЯ ВОЗРАТА
	  ПО КОМАНДЕ BST. ЗНАЧЕНИЕ ДОЛЖНО БЫТЬ ОБЯЗАТЕЛЬНО УКАЗАНО.
	   ЕСЛИ КЛЮЧ НЕ УКАЗАН, СОХРАНЯЮТСЯ ПОСЛЕДНИЕ 10. БЛОКОВ.
	   НА СОХРАНЕНИЕ КАЖДОГО БЛОКА ТРЕБУЕТСЯ 6 СЛОВ.



   ЗАМЕЧАНИЕ!

 В КЛЮЧАХ /E,/D,/C,/P МОЖЕТ БЫТЬ УКАЗАНО БОЛЕЕ ОДНОГО ЗНАЧЕНИЯ
   НАПРИМЕР:
.DEC SY:TODT/E:FUL:ASB:LOC/D:ODD/C:LC:WRD/P:KNL
